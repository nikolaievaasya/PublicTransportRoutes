<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:ctls="clr-namespace:PublicTransportRoutes.Controls"
                    xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit">

    <!-- Start: Pop-up Button Style -->
    <Style x:Key="PopupButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Foreground" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Height" Value="50"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}"
                                SnapsToDevicePixels="true">
                        <ContentPresenter x:Name="contentPresenter"
                                              Focusable="False"
                                              RecognizesAccessKey="True"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              Margin="{TemplateBinding Padding}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="Transparent"/>
                            <Setter Property="BorderBrush" Value="Transparent"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="Transparent"/>
                            <Setter Property="BorderBrush" Value="Transparent"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- End: Pop-up Button Style -->

    <!-- Start: iToggleButton Style -->
    <Style x:Key="iToggleButtonStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Width" Value="30"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border x:Name="border" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                        <Viewbox Height="20" Width="20" Margin="0 6 0 0" Stretch="UniformToFill">
                            <Canvas Height="512" Width="512">
                                <Path Data="m32 0h448c17.671875 0 32 14.328125 32 32s-14.328125 32-32 32h-448c-17.671875 0-32-14.328125-32-32s14.328125-32 32-32zm0 0" Fill="{StaticResource FirstColor}" Margin="0 0 0 0"/>
                                <Path Data="m32 128h448c17.671875 0 32 14.328125 32 32s-14.328125 32-32 32h-448c-17.671875 0-32-14.328125-32-32s14.328125-32 32-32zm0 0" Fill="{StaticResource FirstColor}" Margin="0 20 0 0"/>
                                <Path Data="m32 256h448c17.671875 0 32 14.328125 32 32s-14.328125 32-32 32h-448c-17.671875 0-32-14.328125-32-32s14.328125-32 32-32zm0 0" Fill="{StaticResource FirstColor}" Margin="0 40 0 0"/>
                            </Canvas>
                        </Viewbox>
                    </Border>
                    <ControlTemplate.Triggers>

                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background"
                                        TargetName="border"
                                        Value="Transparent"/>
                            <Setter Property="BorderBrush"
                                        TargetName="border"
                                        Value="#FFFFFF"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Background"
                                        TargetName="border"
                                        Value="Transparent"/>
                            <Setter Property="BorderBrush"
                                        TargetName="border"
                                       Value="#FFFFFF"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- End: iToggleButton Style -->

    <!-- Start: Button Close | Restore | Minimize -->
    <Style x:Key="IconButtonsStyle" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Height" Value="25"/>
        <Setter Property="Width" Value="25"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Name="bd" CornerRadius="5" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}">
                        <Path Name="ico" Data="{TemplateBinding Content}" Fill="{StaticResource FirstColor}" Height="10" Width="10" Stretch="Uniform"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="Transparent"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="Tag" Value="IsCloseButton"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="{DynamicResource btnClose}"/>
                            <Setter TargetName="ico" Property="Fill" Value="{StaticResource FirstColor}"/>
                        </MultiTrigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="ico" Property="Fill" Value="{StaticResource FirstColor}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- End: Button Close | Restore | Minimize -->

    <Style x:Key="FirstTextStyle" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{StaticResource FirstColor}"/>
        <Setter Property="FontFamily" Value="Bahnschrift Light SemiCondensed"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="Margin" Value="5,0,0,0"/>
    </Style>

    <Style x:Key="SeccondTextStyle" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{StaticResource FirstColor}"/>
        <Setter Property="FontFamily" Value="Bahnschrift Light SemiCondensed"/>
    </Style>


    <Style x:Key="ThirdTextStyle" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{StaticResource FirstColor}"/>
        <Setter Property="FontFamily" Value="Bahnschrift Light SemiCondensed"/>
        <Setter Property="TextAlignment" Value="Center"/>
        <Setter Property="FontSize" Value="18"/>
        <Setter Property="Grid.Row" Value="1"/>
        <Setter Property="Margin" Value="0,10,0,0"/>
    </Style>

    <Style x:Key="GridAllignCenter" TargetType="Grid">
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>

    <Style x:Key="ButtonFirstStyle" TargetType="Button">
        <Setter Property="Foreground" Value="{StaticResource FirstColor}"/>
        <Setter Property="FontFamily" Value="Bahnschrift Light SemiCondensed"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border
                        Background="Transparent"
                        BorderBrush="{StaticResource FirstColor}"
                        BorderThickness="1"
                        CornerRadius="5">
                        <ContentPresenter 
                            Content="{TemplateBinding Content}" 
                            VerticalAlignment="Center"
                            HorizontalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Visibility" Value="Hidden"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ButtonWithoutStyle" TargetType="Button">
        <Setter Property="Foreground" Value="{StaticResource FirstColor}"/>
        <Setter Property="FontFamily" Value="Bahnschrift Light SemiCondensed"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border
                        Background="Transparent"
                        BorderBrush="Transparent"
                        BorderThickness="0">
                            <ContentPresenter 
                                Content="{TemplateBinding Content}" 
                                VerticalAlignment="Center"
                                HorizontalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ListViewFirstStyle" TargetType="ListView">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="BorderBrush" Value="{StaticResource FirstColor}"/>
    </Style>

    <Style x:Key="BorderFirstStyle" TargetType="Border">
        <Setter Property="CornerRadius" Value="3"/>
        <Setter Property="BorderBrush" Value="{StaticResource FirstColor}"/>
        <Setter Property="BorderThickness" Value="1"/>
    </Style>

    <Style x:Key="TextBoxFirstStyle" TargetType="TextBox">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="{StaticResource FirstColor}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Foreground" Value="{StaticResource FirstColor}"/>
        <Setter Property="CaretBrush" Value="{StaticResource FirstColor}"/>
        <Setter Property="FontFamily" Value="Bahnschrift Light SemiCondensed"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">
                    <Border
                        Background="Transparent"
                        BorderBrush="{StaticResource FirstColor}"
                        BorderThickness="1"
                        CornerRadius="5">

                        <ScrollViewer 
                            x:Name="PART_ContentHost"
                            Focusable="False"
                            HorizontalScrollBarVisibility="Hidden"
                            VerticalScrollBarVisibility="Hidden"
                            Margin="5"/>

                        <!--<ContentPresenter
                            Content="{TemplateBinding Text}" 
                            VerticalAlignment="Center"
                            HorizontalAlignment="Left"
                            Margin="6,0,0,0"/>-->
                        
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="LabelFirstStyle" TargetType="Label">
        <Setter Property="Foreground" Value="{StaticResource FirstColor}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Label">
                    <Border
                        Background="Transparent"
                        BorderBrush="{StaticResource FirstColor}"
                        BorderThickness="1,1,1,0"
                        CornerRadius="6,6,0,0"
                        HorizontalAlignment="Left"
                        Margin="5,0,0,0">

                        <ContentPresenter
                            Content="{TemplateBinding Content}"
                            VerticalAlignment="Center"
                            HorizontalAlignment="Left"
                            Margin="5,0,5,0">

                            <ContentPresenter.Resources>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Setter Property="FontSize" Value="10"/>
                                    
                                </Style>
                            </ContentPresenter.Resources>

                        </ContentPresenter>

                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type ComboBoxItem}" TargetType="{x:Type ComboBoxItem}">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="Foreground" Value="{StaticResource FirstColor}"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <Border 
                        Name="Border"
                        Padding="2"
                        SnapsToDevicePixels="true">
                        
                        <ContentPresenter />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsHighlighted" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource ThirdColor}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{StaticResource FirstColor}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
        <Border>
            <Grid>
                <Grid.ColumnDefinitions>
                    
                    <ColumnDefinition/>
                    <ColumnDefinition Width="20"/>
                    
                </Grid.ColumnDefinitions>
                
                <Border
                    x:Name="Border" 
                    Grid.ColumnSpan="2"
                    CornerRadius="6"
                    Background="Transparent"
                    BorderBrush="{StaticResource FirstColor}"
                    BorderThickness="1" />
                
                <Border 
                    Grid.Column="0"
                    CornerRadius="0" 
                    Margin="1" 
                    Background="Transparent" 
                    BorderBrush="{StaticResource FirstColor}"
                    BorderThickness="0,0,1,0"/>
                
                <Path 
                    x:Name="Arrow"
                    Grid.Column="1"     
                    Fill="{StaticResource FirstColor}"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z"
                    Margin="0,0,2,0"/>
                
            </Grid>
        </Border>
        
        <!--<ControlTemplate.Triggers>
        <Trigger Property="ToggleButton.IsMouseOver" Value="true">
            <Setter TargetName="Border" Property="Background" Value="#808080" />
        </Trigger>
        <Trigger Property="ToggleButton.IsChecked" Value="true">
            <Setter TargetName="Border" Property="Background" Value="#E0E0E0" />
        </Trigger>
        <Trigger Property="IsEnabled" Value="False">
            <Setter TargetName="Border" Property="Background" Value="#EEEEEE" />
            <Setter TargetName="Border" Property="BorderBrush" Value="#AAAAAA" />
            <Setter Property="Foreground" Value="#888888"/>
            <Setter TargetName="Arrow" Property="Fill" Value="#888888" />
        </Trigger>
    </ControlTemplate.Triggers>-->
    </ControlTemplate>

    <ControlTemplate x:Key="ComboBoxTextBox" TargetType="{x:Type TextBox}">
        <Border x:Name="PART_ContentHost" Focusable="False" Background="{TemplateBinding Background}" />
    </ControlTemplate>

    <Style x:Key="ComboBoxFirstStyle" TargetType="{x:Type ComboBox}">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Hidden"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="MinWidth" Value="120"/>
        <Setter Property="MinHeight" Value="20"/>
        <Setter Property="MaxDropDownHeight" Value="100"/>
        <Setter Property="Foreground" Value="{StaticResource FirstColor}"/>
        <Setter Property="FontFamily" Value="Bahnschrift Light SemiCondensed"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid>
                        <ToggleButton 
                            Name="ToggleButton" 
                            Template="{StaticResource ComboBoxToggleButton}" 
                            Grid.Column="2" 
                            Focusable="false"
                            IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"
                            ClickMode="Press">
                        </ToggleButton>
                        <ContentPresenter Name="ContentSite" IsHitTestVisible="False"  Content="{TemplateBinding SelectionBoxItem}"
                            ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                            ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                            Margin="3,3,23,3"
                            VerticalAlignment="Center"
                            HorizontalAlignment="Left" />
                        <TextBox x:Name="PART_EditableTextBox"
                            Style="{x:Null}" 
                            Template="{StaticResource ComboBoxTextBox}" 
                            HorizontalAlignment="Left" 
                            VerticalAlignment="Center" 
                            Margin="3,3,23,3"
                            Focusable="True" 
                            Background="{StaticResource FourthColor}"
                            Foreground="{StaticResource FirstColor}"
                            Visibility="Hidden"
                            IsReadOnly="{TemplateBinding IsReadOnly}"/>
                        <Popup 
                            Name="Popup"
                            Placement="Bottom"
                            IsOpen="{TemplateBinding IsDropDownOpen}"
                            AllowsTransparency="True" 
                            Focusable="False"
                            PopupAnimation="Slide">

                            <Grid 
                                Name="DropDown"               
                                MinWidth="{TemplateBinding ActualWidth}"
                                MaxHeight="{TemplateBinding MaxDropDownHeight}">

                                <Border 
                                    x:Name="DropDownBorder"
                                    Background="{StaticResource FourthColor}"
                                    BorderThickness="1"
                                    CornerRadius="5"
                                    BorderBrush="{StaticResource FirstColor}"/>

                                <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="#888888"/>
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                        </Trigger>
                        <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="true">
                            <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="0"/>
                            <Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0"/>
                        </Trigger>
                        <Trigger Property="IsEditable"  Value="true">
                            <Setter Property="IsTabStop" Value="false"/>
                            <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
        </Style.Triggers>
    </Style>

    <Style x:Key="ButtonMenuWithPathStyle" TargetType="Button">
        <Setter Property="Foreground" Value="{StaticResource FirstColor}"/>
        <Setter Property="FontFamily" Value="Bahnschrift Light SemiCondensed"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="Width" Value="150"/>
        <Setter Property="Height" Value="150"/>
        <Setter Property="Margin" Value="5"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border
                        Background="Transparent"
                        BorderBrush="{StaticResource FirstColor}"
                        BorderThickness="1"
                        CornerRadius="5">
                        <ContentPresenter 
                            Content="{TemplateBinding Content}" 
                            VerticalAlignment="Center"
                            HorizontalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="PathMenuWithPathStyle" TargetType="Path">
        <Setter Property="Grid.Row" Value="0"/>
        <Setter Property="Fill" Value="{StaticResource FirstColor}"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="Stretch" Value="Uniform"/>
        <Setter Property="Margin" Value="0,20,0,0"/>
    </Style>

    <Style x:Key="ButtonSpinnerUp2Style" TargetType="Button">
        <Setter Property="Foreground" Value="{StaticResource FirstColor}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border
                        Background="Transparent"
                        BorderBrush="{StaticResource FirstColor}"
                        BorderThickness="1,0,0,1"
                        CornerRadius="0,0,0,6">
                        
                            <ContentPresenter 
                                Content="{TemplateBinding Content}" 
                                VerticalAlignment="Center"
                                HorizontalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="PathSpinnerStyle" TargetType="Path">
        <Setter Property="Grid.Row" Value="0"/>
        <Setter Property="Fill" Value="{StaticResource FirstColor}"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="Stretch" Value="Uniform"/>
        <Setter Property="Margin" Value="3"/>
    </Style>

    <Style x:Key="ButtonSpinnerUpStyle" TargetType="RepeatButton">
        <Setter Property="Foreground" Value="{StaticResource FirstColor}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RepeatButton">
                    <Border
                        Background="Transparent"
                        BorderBrush="{StaticResource FirstColor}"
                        BorderThickness="1,0,0,1"
                        CornerRadius="0,0,0,6">
                        
                        <ContentPresenter 
                            Content="{TemplateBinding Content}" 
                            VerticalAlignment="Center"
                            HorizontalAlignment="Center"/>
                        
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ButtonSpinnerDownStyle" TargetType="RepeatButton">
        <Setter Property="Foreground" Value="{StaticResource FirstColor}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RepeatButton">
                    <Border
                        Background="Transparent"
                        BorderBrush="{StaticResource FirstColor}"
                        BorderThickness="1,1,0,0"
                        CornerRadius="6,0,0,0">

                        <ContentPresenter 
                            Content="{TemplateBinding Content}" 
                            VerticalAlignment="Center"
                            HorizontalAlignment="Center"/>

                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ButtonSpinnerUpMirroredStyle" TargetType="RepeatButton">
        <Setter Property="Foreground" Value="{StaticResource FirstColor}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RepeatButton">
                    <Border
                        Background="Transparent"
                        BorderBrush="{StaticResource FirstColor}"
                        BorderThickness="0,0,1,1"
                        CornerRadius="0,0,6,0">

                        <ContentPresenter 
                            Content="{TemplateBinding Content}" 
                            VerticalAlignment="Center"
                            HorizontalAlignment="Center"/>

                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ButtonSpinnerDownMirroredStyle" TargetType="RepeatButton">
        <Setter Property="Foreground" Value="{StaticResource FirstColor}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RepeatButton">
                    <Border
                    Background="Transparent"
                    BorderBrush="{StaticResource FirstColor}"
                    BorderThickness="0,1,1,0"
                    CornerRadius="0,6,0,0">

                        <ContentPresenter 
                        Content="{TemplateBinding Content}" 
                        VerticalAlignment="Center"
                        HorizontalAlignment="Center"/>

                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>